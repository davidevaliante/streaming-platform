.f3husnf{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:100vh;}
.s1cs6tfk{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:400px;padding:3rem;background:#1c1c1c;border-radius:8px;box-shadow:0px 0px 15px 5px black;}
.s1q04heu{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:400px;padding:1rem 3rem;margin-top:2rem;background:#1c1c1c;border-radius:8px;box-shadow:0px 0px 5px 1px black;font-size:12px;}.s1q04heu p{font-size:14px;margin-bottom:1rem;}.s1q04heu ul{list-style-type:circle;list-style-position:inside;}.s1q04heu ul li{margin:0.5rem 0rem;}
/*# sourceMappingURL=data:application/json;base64,*/