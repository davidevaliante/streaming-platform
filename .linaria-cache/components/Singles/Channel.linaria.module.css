.w1qke4wy{width:640px;height:480px;margin:15px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHNcXFNpbmdsZXNcXENoYW5uZWwudHN4Il0sIm5hbWVzIjpbIi53MXFrZTR3eSJdLCJtYXBwaW5ncyI6IkFBTU1BIiwiZmlsZSI6ImNvbXBvbmVudHNcXFNpbmdsZXNcXENoYW5uZWwudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgdmlkZW9qcyBmcm9tICd2aWRlby5qcydcclxuaW1wb3J0IHsgVmlkZW9KU1F1YWxpdHlQbHVnaW4sIFZpZGVvSlNJVlNUZWNoLCBWaWRlb0pTRXZlbnRzLCBUZXh0TWV0YWRhdGFDdWUgfSBmcm9tICdhbWF6b24taXZzLXBsYXllcidcclxuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJ1xyXG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tICdAbGluYXJpYS9yZWFjdCdcclxuXHJcbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gICAgd2lkdGg6IDY0MHB4O1xyXG4gICAgaGVpZ2h0OiA0ODBweDtcclxuICAgIG1hcmdpbjogMTVweDtcclxuYFxyXG5cclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gICAgaW50ZXJmYWNlIFdpbmRvdyB7XHJcbiAgICAgICAgcmVnaXN0ZXJJVlNUZWNoOiBhbnlcclxuICAgICAgICByZWdpc3RlcklWU1F1YWxpdHlQbHVnaW46IGFueVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyDrlJTtj7TtirggcGxheWJhY2sgdXJsXHJcbmNvbnN0IGRlZmF1bHRQbGF5YmFja1VybCA9XHJcbiAgICAnaHR0cHM6Ly9mY2MzZGRhZTU5ZWQudXMtd2VzdC0yLnBsYXliYWNrLmxpdmUtdmlkZW8ubmV0L2FwaS92aWRlby92MS91cy13ZXN0LTIuODkzNjQ4NTI3MzU0LmNoYW5uZWwuRG11bU5ja1dGVHF6Lm0zdTgnXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElWU1BsYXllclByb3BzIHtcclxuICAgIC8qKiBJVlMgUGxheWJhY2sgVVJMICovXHJcbiAgICBzcmM/OiBzdHJpbmdcclxuICAgIC8qKiBxdWl6IOuplO2DgOuNsOydtO2EsOqwgCDrj4Tri6ztlZjrqbQg7J2066W8IO2VuOuTpOunge2VmOuKlCDtlajsiJggKi9cclxuICAgIGhhbmRsZVF1aXpFdmVudD86IChjdWU6IFRleHRNZXRhZGF0YUN1ZSkgPT4gdm9pZFxyXG59XHJcblxyXG5mdW5jdGlvbiBJVlNQbGF5ZXIoeyBzcmMsIGhhbmRsZVF1aXpFdmVudCB9OiBJVlNQbGF5ZXJQcm9wcykge1xyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAvLyDroZzrk5ztlaAgc291cmNlIHN0cmVhbSDsnYQg7KeA7KCV7ZWp64uI64ukLiBQcm9wIOycvOuhnCDrsJvsnYAgc3JjIOuhnCDshKTsoJXtlZjqsbDrgpgg7KG07J6s7ZWY7KeAIOyViuycvOuptCDquLDrs7ggdXJsIOuhnCDshKTsoJXtlanri4jri6Qo7ZWE7IiYIOyVhOuLmCkuXHJcbiAgICAgICAgY29uc3QgUExBWUJBQ0tfVVJMID0gc3JjID8/IGRlZmF1bHRQbGF5YmFja1VybFxyXG5cclxuICAgICAgICAvLyBBbWF6b24gSVZTIOulvCB2aWRlby5qcyDsnZggcGxheWJhY2sgdGVjaCDroZwg7ISk7KCV7ZWp64uI64ukLlxyXG4gICAgICAgIHdpbmRvdy5yZWdpc3RlcklWU1RlY2godmlkZW9qcylcclxuICAgICAgICAvLyBJVlMg7JeQ7ISc64qUIOyKpO2KuOumrOuwjSDtkojsp4jsnYQg7ISg7YOd7ZWgIOyImCDsnojripQg7ZSM65+s6re47J247J2EIOygnOqzte2VtOykjeuLiOuLpC5cclxuICAgICAgICAvLyBJVlMg7JeQ7IScIOygnOqzte2VmOuKlCBVSSDtlIzrn6zqt7jsnbjsnYQg7IKs7Jqp7ZWY66Ck66m0IOydtOulvCDrk7HroZ3tlbTso7zslrTslbwg7ZWp64uI64ukLlxyXG4gICAgICAgIHdpbmRvdy5yZWdpc3RlcklWU1F1YWxpdHlQbHVnaW4odmlkZW9qcylcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog7ZSM66CI7J207Ja066W8IOy0iOq4sO2ZlO2VmOqzoCBpbnN0YW50aWF0ZSDtlanri4jri6QuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgcGxheWVyID0gdmlkZW9qcyhcclxuICAgICAgICAgICAgLy8g7ZSM66CI7J207Ja07JeQIOyXsOuPmeuQoCB2aWRlbyDtg5zqt7jsnZggaWRcclxuICAgICAgICAgICAgJ2FtYXpvbi1pdnMtdmlkZW9qcycsXHJcbiAgICAgICAgICAgIC8vIO2UjOugiOydtOyWtCDsmLXshZhcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgdGVjaE9yZGVyOiBbJ0FtYXpvbklWUyddLCAvLyDtlIzroIjsnbTslrQg7J247Iqk7YS07Iqk66W8IOyDneyEse2VoCDrlYwsIElWUyDrpbwg7LKrIOuyiOynuCDthYztgazroZwg7KCc6rO17ZW07KO87Ja07JW8IO2VqeuLiOuLpC5cclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAvLyB2aWRlby5qcyByZWFkeSDsnbTrsqTtirgg7ZW465Ok65+sIOy2lOqwgFxyXG4gICAgICAgICAgICAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBwbGF5YmFjayB1cmwg7J2EIHNyYyDroZwg7ISk7KCV7ZWp64uI64ukLiBhdXRvcGxheSDqsIAg7Ji17IWY7Jy866GcIOyjvOyWtOynhOuLpOuptCDrsJTroZwgcGxheSDrkKnri4jri6QuXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSVZTIFBsYXllciBpcyBSRUFEWSEnKVxyXG4gICAgICAgICAgICAgICAgcGxheWVyLnNyYyhQTEFZQkFDS19VUkwpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgKSBhcyB2aWRlb2pzLlBsYXllciAmIFZpZGVvSlNJVlNUZWNoICYgVmlkZW9KU1F1YWxpdHlQbHVnaW5cclxuXHJcbiAgICAgICAgLy8g7JyE7JeQ7IScIOuTseuhne2VnCDtlIzrn6zqt7jsnbjsnYQgZW5hYmxlIOyLnOy8nOyjvOyWtOyVvCBVSSDrsoTtirzrk6TsnbQg64KY7YOA64Kp64uI64ukLlxyXG4gICAgICAgIHBsYXllci5lbmFibGVJVlNRdWFsaXR5UGx1Z2luKClcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog7J2067Kk7Yq4IOumrOyKpOuEiOulvCDstpTqsIDtlbTspI3ri4jri6RcclxuICAgICAgICAgKiB2aWRlby5qcyDsmbjsnZggSVZTIFBsYXllciDsl5DshJwg67Cc7IOd7ZWY64qUIGV2ZW50IOuKlCDri6TsnYzqs7wg6rCZ7J20IOy2lOqwgO2VmOqzoCDsoJzqsbDtlaAg7IiYIOyeiOyKteuLiOuLpC5cclxuICAgICAgICAgKi9cclxuICAgICAgICBjb25zdCBldmVudHM6IFZpZGVvSlNFdmVudHMgPSBwbGF5ZXIuZ2V0SVZTRXZlbnRzKClcclxuICAgICAgICBjb25zdCBpdnNQbGF5ZXIgPSBwbGF5ZXIuZ2V0SVZTUGxheWVyKClcclxuXHJcbiAgICAgICAgLy8gUExBWUlORyDsnbTrsqTtirgg7ZW465Ok65+sIOy2lOqwgFxyXG4gICAgICAgIGl2c1BsYXllci5hZGRFdmVudExpc3RlbmVyKGV2ZW50cy5QbGF5ZXJTdGF0ZS5QTEFZSU5HLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJVlMgUGxheWVyIGlzIFBMQVlJTkcnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLy8gSURMRSDsnbTrsqTtirgg7ZW465Ok65+sIOy2lOqwgFxyXG4gICAgICAgIGl2c1BsYXllci5hZGRFdmVudExpc3RlbmVyKGV2ZW50cy5QbGF5ZXJTdGF0ZS5JRExFLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJVlMgUGxheWVyIGlzIElETEUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLy8gQlVGRkVSSU5HIOydtOuypO2KuCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgaXZzUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzLlBsYXllclN0YXRlLkJVRkZFUklORywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnSVZTIFBsYXllciBpcyBCVUZGRVJJTkcnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLy8gRU5ERUQg7J2067Kk7Yq4IO2VuOuTpOufrCDstpTqsIBcclxuICAgICAgICBpdnNQbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudHMuUGxheWVyU3RhdGUuRU5ERUQsICgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0lWUyBQbGF5ZXIgaXMgRU5ERUQnKVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC8vIFRpbWVkIG1ldGFkYXRhIOulvCDsiJjsi6DtlZjsmIDsnYQg65WMIOydtOulvCDtlbjrk6Trp4HtlZjripQg7J2067Kk7Yq4IO2VuOuTpOufrCDstpTqsIBcclxuICAgICAgICBpdnNQbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudHMuUGxheWVyRXZlbnRUeXBlLlRFWFRfTUVUQURBVEFfQ1VFLCBmdW5jdGlvbiAoY3VlOiBhbnkpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coY3VlKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnVGltZWQgbWV0YWRhdGE6ICcsIGN1ZS50ZXh0KVxyXG5cclxuICAgICAgICAgICAgY29uc3QgbWV0YWRhdGEgPSBKU09OLnBhcnNlKGN1ZS50ZXh0KVxyXG4gICAgICAgICAgICBpZiAobWV0YWRhdGEudHlwZSA9PT0gJ3F1aXonICYmIGhhbmRsZVF1aXpFdmVudCkge1xyXG4gICAgICAgICAgICAgICAgaGFuZGxlUXVpekV2ZW50KGN1ZSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIOyXkOufrCDtlbjrk6Trn6zrpbwg7LaU6rCA7ZW07KSN64uI64ukLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIC8vIHZpZGVvLmpzIOyXkOufrCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgcGxheWVyLm9uKCdlcnJvcicsICgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cocGxheWVyLmVycm9yKCkpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyBJVlMg7ZSM66CI7J207Ja0IOyXkOufrCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgaXZzUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzLlBsYXllckV2ZW50VHlwZS5FUlJPUiwgKHBheWxvYWQ6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB7IHR5cGUsIGNvZGUsIHNvdXJjZSwgbWVzc2FnZSB9ID0gcGF5bG9hZFxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0eXBlLCBjb2RlLCBzb3VyY2UsIG1lc3NhZ2UpXHJcbiAgICAgICAgICAgIGFsZXJ0KG1lc3NhZ2UpXHJcbiAgICAgICAgfSlcclxuICAgIH0sIFtzcmNdKVxyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPD5cclxuICAgICAgICAgICAgPEhlYWQ+XHJcbiAgICAgICAgICAgICAgICB7LyoqIElWUyDtlIzroIjsnbTslrTsl5DshJwg7KCc6rO17ZW07KO864qUIO2UjOufrOq3uOyduCBVSeulvCDsiqTtg4Dsnbzrp4Eg7ZWY64qUIGNzcyAqL31cclxuICAgICAgICAgICAgICAgIDxsaW5rIGhyZWY9J2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL3ZpZGVvLmpzLzcuNi42L3ZpZGVvLWpzLmNzcycgcmVsPSdzdHlsZXNoZWV0JyAvPlxyXG4gICAgICAgICAgICA8L0hlYWQ+XHJcbiAgICAgICAgICAgIDxXcmFwcGVyIGNsYXNzTmFtZT0ndmlkZW8tY29udGFpbmVyJz5cclxuICAgICAgICAgICAgICAgIDx2aWRlb1xyXG4gICAgICAgICAgICAgICAgICAgIGlkPSdhbWF6b24taXZzLXZpZGVvanMnXHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSd2aWRlby1qcyB2anMtNC0zIHZqcy1iaWctcGxheS1jZW50ZXJlZCdcclxuICAgICAgICAgICAgICAgICAgICBjb250cm9sc1xyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9QbGF5XHJcbiAgICAgICAgICAgICAgICAgICAgcGxheXNJbmxpbmU+PC92aWRlbz5cclxuICAgICAgICAgICAgPC9XcmFwcGVyPlxyXG4gICAgICAgIDwvPlxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBJVlNQbGF5ZXJcclxuIl19*/