.w16z2qzg{width:640px;height:480px;margin:15px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHNcXFNpbmdsZXNcXEl2c3ZpZGVvLnRzeCJdLCJuYW1lcyI6WyIudzE2ejJxemciXSwibWFwcGluZ3MiOiJBQU1NQSIsImZpbGUiOiJjb21wb25lbnRzXFxTaW5nbGVzXFxJdnN2aWRlby50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB2aWRlb2pzIGZyb20gJ3ZpZGVvLmpzJ1xyXG5pbXBvcnQgeyBWaWRlb0pTUXVhbGl0eVBsdWdpbiwgVmlkZW9KU0lWU1RlY2gsIFZpZGVvSlNFdmVudHMsIFRleHRNZXRhZGF0YUN1ZSB9IGZyb20gJ2FtYXpvbi1pdnMtcGxheWVyJ1xyXG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXHJcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ0BsaW5hcmlhL3JlYWN0J1xyXG5cclxuY29uc3QgV3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgICB3aWR0aDogNjQwcHg7XHJcbiAgICBoZWlnaHQ6IDQ4MHB4O1xyXG4gICAgbWFyZ2luOiAxNXB4O1xyXG5gXHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgICBpbnRlcmZhY2UgV2luZG93IHtcclxuICAgICAgICByZWdpc3RlcklWU1RlY2g6IGFueVxyXG4gICAgICAgIHJlZ2lzdGVySVZTUXVhbGl0eVBsdWdpbjogYW55XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIOuUlO2PtO2KuCBwbGF5YmFjayB1cmxcclxuY29uc3QgZGVmYXVsdFBsYXliYWNrVXJsID1cclxuICAgICdodHRwczovL2ZjYzNkZGFlNTllZC51cy13ZXN0LTIucGxheWJhY2subGl2ZS12aWRlby5uZXQvYXBpL3ZpZGVvL3YxL3VzLXdlc3QtMi44OTM2NDg1MjczNTQuY2hhbm5lbC5EbXVtTmNrV0ZUcXoubTN1OCdcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSVZTUGxheWVyUHJvcHMge1xyXG4gICAgLyoqIElWUyBQbGF5YmFjayBVUkwgKi9cclxuICAgIHNyYz86IHN0cmluZ1xyXG4gICAgLyoqIHF1aXog66mU7YOA642w7J207YSw6rCAIOuPhOuLrO2VmOuptCDsnbTrpbwg7ZW465Ok66eB7ZWY64qUIO2VqOyImCAqL1xyXG4gICAgaGFuZGxlUXVpekV2ZW50PzogKGN1ZTogVGV4dE1ldGFkYXRhQ3VlKSA9PiB2b2lkXHJcbn1cclxuXHJcbmZ1bmN0aW9uIElWU1BsYXllcih7IHNyYywgaGFuZGxlUXVpekV2ZW50IH06IElWU1BsYXllclByb3BzKSB7XHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIC8vIOuhnOuTnO2VoCBzb3VyY2Ugc3RyZWFtIOydhCDsp4DsoJXtlanri4jri6QuIFByb3Ag7Jy866GcIOuwm+ydgCBzcmMg66GcIOyEpOygle2VmOqxsOuCmCDsobTsnqztlZjsp4Ag7JWK7Jy866m0IOq4sOuzuCB1cmwg66GcIOyEpOygle2VqeuLiOuLpCjtlYTsiJgg7JWE64uYKS5cclxuICAgICAgICBjb25zdCBQTEFZQkFDS19VUkwgPSBzcmMgPz8gZGVmYXVsdFBsYXliYWNrVXJsXHJcblxyXG4gICAgICAgIC8vIEFtYXpvbiBJVlMg66W8IHZpZGVvLmpzIOydmCBwbGF5YmFjayB0ZWNoIOuhnCDshKTsoJXtlanri4jri6QuXHJcbiAgICAgICAgd2luZG93LnJlZ2lzdGVySVZTVGVjaCh2aWRlb2pzKVxyXG4gICAgICAgIC8vIElWUyDsl5DshJzripQg7Iqk7Yq466as67CNIO2SiOyniOydhCDshKDtg53tlaAg7IiYIOyeiOuKlCDtlIzrn6zqt7jsnbjsnYQg7KCc6rO17ZW07KSN64uI64ukLlxyXG4gICAgICAgIC8vIElWUyDsl5DshJwg7KCc6rO17ZWY64qUIFVJIO2UjOufrOq3uOyduOydhCDsgqzsmqntlZjroKTrqbQg7J2066W8IOuTseuhne2VtOyjvOyWtOyVvCDtlanri4jri6QuXHJcbiAgICAgICAgd2luZG93LnJlZ2lzdGVySVZTUXVhbGl0eVBsdWdpbih2aWRlb2pzKVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDtlIzroIjsnbTslrTrpbwg7LSI6riw7ZmU7ZWY6rOgIGluc3RhbnRpYXRlIO2VqeuLiOuLpC5cclxuICAgICAgICAgKi9cclxuICAgICAgICBjb25zdCBwbGF5ZXIgPSB2aWRlb2pzKFxyXG4gICAgICAgICAgICAvLyDtlIzroIjsnbTslrTsl5Ag7Jew64+Z65CgIHZpZGVvIO2DnOq3uOydmCBpZFxyXG4gICAgICAgICAgICAnYW1hem9uLWl2cy12aWRlb2pzJyxcclxuICAgICAgICAgICAgLy8g7ZSM66CI7J207Ja0IOyYteyFmFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0ZWNoT3JkZXI6IFsnQW1hem9uSVZTJ10sIC8vIO2UjOugiOydtOyWtCDsnbjsiqTthLTsiqTrpbwg7IOd7ISx7ZWgIOuVjCwgSVZTIOulvCDssqsg67KI7Ke4IO2FjO2BrOuhnCDsoJzqs7XtlbTso7zslrTslbwg7ZWp64uI64ukLlxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIC8vIHZpZGVvLmpzIHJlYWR5IOydtOuypO2KuCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgICAgICgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHBsYXliYWNrIHVybCDsnYQgc3JjIOuhnCDshKTsoJXtlanri4jri6QuIGF1dG9wbGF5IOqwgCDsmLXshZjsnLzroZwg7KO87Ja07KeE64uk66m0IOuwlOuhnCBwbGF5IOuQqeuLiOuLpC5cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJVlMgUGxheWVyIGlzIFJFQURZIScpXHJcbiAgICAgICAgICAgICAgICBwbGF5ZXIuc3JjKFBMQVlCQUNLX1VSTClcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICApIGFzIHZpZGVvanMuUGxheWVyICYgVmlkZW9KU0lWU1RlY2ggJiBWaWRlb0pTUXVhbGl0eVBsdWdpblxyXG5cclxuICAgICAgICAvLyDsnITsl5DshJwg65Ox66Gd7ZWcIO2UjOufrOq3uOyduOydhCBlbmFibGUg7Iuc7Lyc7KO87Ja07JW8IFVJIOuyhO2KvOuTpOydtCDrgpjtg4Drgqnri4jri6QuXHJcbiAgICAgICAgcGxheWVyLmVuYWJsZUlWU1F1YWxpdHlQbHVnaW4oKVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDsnbTrsqTtirgg66as7Iqk64SI66W8IOy2lOqwgO2VtOykjeuLiOuLpFxyXG4gICAgICAgICAqIHZpZGVvLmpzIOyZuOydmCBJVlMgUGxheWVyIOyXkOyEnCDrsJzsg53tlZjripQgZXZlbnQg64qUIOuLpOydjOqzvCDqsJnsnbQg7LaU6rCA7ZWY6rOgIOygnOqxsO2VoCDsiJgg7J6I7Iq164uI64ukLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGNvbnN0IGV2ZW50czogVmlkZW9KU0V2ZW50cyA9IHBsYXllci5nZXRJVlNFdmVudHMoKVxyXG4gICAgICAgIGNvbnN0IGl2c1BsYXllciA9IHBsYXllci5nZXRJVlNQbGF5ZXIoKVxyXG5cclxuICAgICAgICAvLyBQTEFZSU5HIOydtOuypO2KuCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgaXZzUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzLlBsYXllclN0YXRlLlBMQVlJTkcsICgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0lWUyBQbGF5ZXIgaXMgUExBWUlORycpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyBJRExFIOydtOuypO2KuCDtlbjrk6Trn6wg7LaU6rCAXHJcbiAgICAgICAgaXZzUGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnRzLlBsYXllclN0YXRlLklETEUsICgpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0lWUyBQbGF5ZXIgaXMgSURMRScpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyBCVUZGRVJJTkcg7J2067Kk7Yq4IO2VuOuTpOufrCDstpTqsIBcclxuICAgICAgICBpdnNQbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudHMuUGxheWVyU3RhdGUuQlVGRkVSSU5HLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdJVlMgUGxheWVyIGlzIEJVRkZFUklORycpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyBFTkRFRCDsnbTrsqTtirgg7ZW465Ok65+sIOy2lOqwgFxyXG4gICAgICAgIGl2c1BsYXllci5hZGRFdmVudExpc3RlbmVyKGV2ZW50cy5QbGF5ZXJTdGF0ZS5FTkRFRCwgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnSVZTIFBsYXllciBpcyBFTkRFRCcpXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy8gVGltZWQgbWV0YWRhdGEg66W8IOyImOyLoO2VmOyYgOydhCDrlYwg7J2066W8IO2VuOuTpOunge2VmOuKlCDsnbTrsqTtirgg7ZW465Ok65+sIOy2lOqwgFxyXG4gICAgICAgIGl2c1BsYXllci5hZGRFdmVudExpc3RlbmVyKGV2ZW50cy5QbGF5ZXJFdmVudFR5cGUuVEVYVF9NRVRBREFUQV9DVUUsIGZ1bmN0aW9uIChjdWU6IGFueSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjdWUpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdUaW1lZCBtZXRhZGF0YTogJywgY3VlLnRleHQpXHJcblxyXG4gICAgICAgICAgICBjb25zdCBtZXRhZGF0YSA9IEpTT04ucGFyc2UoY3VlLnRleHQpXHJcbiAgICAgICAgICAgIGlmIChtZXRhZGF0YS50eXBlID09PSAncXVpeicgJiYgaGFuZGxlUXVpekV2ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBoYW5kbGVRdWl6RXZlbnQoY3VlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog7JeQ65+sIO2VuOuTpOufrOulvCDstpTqsIDtlbTspI3ri4jri6QuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgLy8gdmlkZW8uanMg7JeQ65+sIO2VuOuTpOufrCDstpTqsIBcclxuICAgICAgICBwbGF5ZXIub24oJ2Vycm9yJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhwbGF5ZXIuZXJyb3IoKSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC8vIElWUyDtlIzroIjsnbTslrQg7JeQ65+sIO2VuOuTpOufrCDstpTqsIBcclxuICAgICAgICBpdnNQbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcihldmVudHMuUGxheWVyRXZlbnRUeXBlLkVSUk9SLCAocGF5bG9hZDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgdHlwZSwgY29kZSwgc291cmNlLCBtZXNzYWdlIH0gPSBwYXlsb2FkXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHR5cGUsIGNvZGUsIHNvdXJjZSwgbWVzc2FnZSlcclxuICAgICAgICAgICAgYWxlcnQobWVzc2FnZSlcclxuICAgICAgICB9KVxyXG4gICAgfSwgW3NyY10pXHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG4gICAgICAgICAgICA8SGVhZD5cclxuICAgICAgICAgICAgICAgIHsvKiogSVZTIO2UjOugiOydtOyWtOyXkOyEnCDsoJzqs7XtlbTso7zripQg7ZSM65+s6re47J24IFVJ66W8IOyKpO2DgOydvOungSDtlZjripQgY3NzICovfVxyXG4gICAgICAgICAgICAgICAgPGxpbmsgaHJlZj0naHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvdmlkZW8uanMvNy42LjYvdmlkZW8tanMuY3NzJyByZWw9J3N0eWxlc2hlZXQnIC8+XHJcbiAgICAgICAgICAgIDwvSGVhZD5cclxuICAgICAgICAgICAgPFdyYXBwZXIgY2xhc3NOYW1lPSd2aWRlby1jb250YWluZXInPlxyXG4gICAgICAgICAgICAgICAgPHZpZGVvXHJcbiAgICAgICAgICAgICAgICAgICAgaWQ9J2FtYXpvbi1pdnMtdmlkZW9qcydcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J3ZpZGVvLWpzIHZqcy00LTMgdmpzLWJpZy1wbGF5LWNlbnRlcmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b1BsYXlcclxuICAgICAgICAgICAgICAgICAgICBwbGF5c0lubGluZT48L3ZpZGVvPlxyXG4gICAgICAgICAgICA8L1dyYXBwZXI+XHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IElWU1BsYXllclxyXG4iXX0=*/